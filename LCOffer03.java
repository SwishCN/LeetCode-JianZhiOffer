/**
 * 剑指 Offer 03. 数组中重复的数字
 * 找出数组中重复的数字。
 *
 * 在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。
 * 数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。
 * 请找出数组中任意一个重复的数字。
 *
 * 示例 1：
 * 输入：
 * [2, 3, 1, 0, 2, 5, 3]
 * 输出：
 * 2 或 3
 * 限制：
 * 2 <= n <= 100000
 *
 * 思路：数组中数字都在0~n-1的范围内，如果这个数组中没有重复的数字，那么当数组排序之后数字i将出现在下标为i的位置。
 *      由于数组中有重复的数字，有些位置可能存在多个数字，同时有些位置可能没有数字。
 *      从头到尾依次扫描这个数组中的每个数字，当扫描到下标为i的数字时，首先比较这个数字（用m表示）是不是等于i。
 *      如果是，则接着扫描下一个数字；如果不是，则再拿它和第m个数字进行比较。
 *          如果它和第m个数字相等，就找到了一个重复的数字（该数字在下标为i和m的位置都出现了）；
 *          如果它和第m个数字不相等，就把第i个数字和第m个数字交换，把m放到属于它的位置。
 *      接下来再重复这个比较、交换的过程，直到我们发现一个重复的数字。
 * @author Swish
 */
class Solution {

    public int findRepeatNumber(int[] nums) {

        for (int i = 0; i < nums.length; i++) {

            while (nums[i] != i) {

                if (nums[i] == nums[nums[i]]) {
                    return nums[i];
                }

                //swap nums[i] and nums[nums[i]]
                int temp = nums[i];
                nums[i] = nums[temp];
                nums[temp] = temp;

            }

        }

        return -1;

    }

}